// /*
//  * Copyright (c) 2021 The ZMK Contributors
//  *
//  * SPDX-License-Identifier: MIT
//  */
//
// #include <behaviors.dtsi>
// #include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/bt.h>
//
// #define DEF 0
// #define SYM 1
// #define FUN 2
//
// &lt {
//     tapping-term-ms = <180>;
//     flavor = "tap-preferred";
// };
//
// / {
//
//     keymap {
//         compatible = "zmk,keymap";
//
//         default_layer {
//             bindings = <
//                 &kp SEMI  &kp Q    &kp W &kp F &kp P   &kp G                         &kp J         &kp L    &kp U     &kp Y   &kp SQT   &kp MINUS
//                 &kp LSHFT &kp A    &kp R &kp S &kp T   &kp D                         &kp H         &kp N    &kp E     &kp I   &kp O     &kp RSHFT
//                 &kp LCTRL &kp Z    &kp X &kp C &kp V   &kp B       &none   &none     &kp K         &kp M    &kp COMMA &kp DOT &kp SLASH &kp RCTRL
//                 &kp LALT  &kp LGUI &none &none &kp DEL &lt SYM TAB &kp ESC &kp ENTER &lt FUN SPACE &kp BSPC &none     &none   &kp RGUI  &kp RALT
//             >;
//         };
//
//         symbol_layer {
//             bindings = <
//                 &kp COLON &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                  &kp N6    &kp N7    &kp N8   &kp N9   &kp DQT   &kp UNDER
//                 &kp HASH  &kp EXCL &kp LPAR &kp RPAR &kp DLLR &kp AMPS                &kp PIPE  &kp EQUAL &kp LBRC &kp RBRC &kp N0    &kp GRAVE
//                 &kp TILDE &kp AT   &kp LBKT &kp RBKT &kp PLUS &kp PRCNT &trans &trans &kp CARET &kp ASTRK &kp LT   &kp GT   &kp QMARK &kp BSLH
//                 &trans    &trans   &trans   &trans   &trans   &trans    &trans &trans &kp SPACE &trans    &trans   &trans   &trans    &trans
//             >;
//         };
//
//         function_layer {
//             bindings = <
//                 &trans &kp F1 &kp F2  &kp F3  &kp F4  &kp PSCRN                          &kp SLCK   &kp HOME   &kp PG_DN    &kp PG_UP    &kp END         &trans
//                 &trans &kp F5 &kp F6  &kp F7  &kp F8  &kp INS                            &kp CLCK   &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT       &trans
//                 &trans &kp F9 &kp F10 &kp F11 &kp F12 &kp K_APP  &bt BT_PRV   &bt BT_NXT &kp KP_NUM &kp K_MUTE &kp K_VOL_DN &kp K_VOL_UP &kp PAUSE_BREAK &trans
//                 &trans &trans &trans  &trans  &trans  &kp TAB    &bt BT_SEL 0 &bt BT_CLR &trans     &trans     &trans       &trans       &trans          &trans
//             >;
//         };
//     };
// };
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2
#define WORKSPACE 3
#define SHORTCUTS 4

// Custom keycode for CTRL+SHIFT
/ {
    behaviors {
        ctrl_shift: ctrl_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LSHFT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        // Emulate QMK's Dynamic Macro functionality
        dm_rec1: dm_rec1 {
            label = "ZM_dm_rec1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LC(Q)>;
        };
        dm_ply1: dm_ply1 {
            label = "ZM_dm_ply1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LC(W)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T                            &kp Y &kp U  &kp I     &kp O   &kp P    &mt LGUI DEL
                &lt LOWER ESC &kp A &kp S &kp D &kp F &kp G                        &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &mt LSHFT CAPS &kp Z &kp X &kp C &kp V &kp B &mo WORKSPACE         &kp RSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                &kp LCTRL &kp LALT &kp LGUI &kp LALT &mt LALT DEL &mt LGUI RET &ctrl_shift &lt SHORTCUTS RSHFT &kp SPACE &lt RAISE BSPC &mt LALT BSLH &kp RALT &kp RGUI &kp RCTRL
            >;
        };
        

        raise_layer {
            bindings = <
                &bootloader &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT            &kp CARET &kp AMPS &kp LBKT &kp RBKT &kp STAR &kp EQUAL
                &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                        &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS
                &trans &trans &trans &trans &trans &trans &trans                    &trans &trans &trans &kp LBRC &kp RBRC &trans &trans
                &trans &trans &trans &trans &trans &trans &trans                    &trans &trans &trans &trans &kp MINUS &kp EQUAL &trans
            >;
        };

        lower_layer {
            bindings = <
                &kp TILDE &trans &trans &trans &trans &trans                        &trans &trans &trans &trans &trans &trans
                &trans &kp HOME &kp PG_DN &kp PG_UP &kp END &trans                  &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
                &trans &trans &trans &trans &trans &trans &trans                    &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans                    &trans &trans &trans &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &kp C_NEXT
            >;
        };

        workspace_layer {
            bindings = <
                &none &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                            &none &none &none &none &none &none
                &none &kp N6 &kp N7 &kp N8 &kp N9 &kp N0                            &none &none &none &none &none &none
                &trans &none &none &none &none &none &trans                         &trans &none &none &none &none &none &trans
                &trans &trans &trans &trans &trans &trans &trans                    &trans &trans &trans &none &none &none &none
            >;
        };

shortcuts_layer {
            bindings = <
                &kp F1    &kp F2    &kp F3    &kp F4  &kp F5     &kp F6                                 &kp F7       &kp F8       &kp F9     &kp F10 &kp F11   &kp F12
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &dm_rec1   &dm_ply1      &none     &none &none &none
                &bt BT_CLR_ALL &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &none       &none      &none      &none        &none        &none      &none      &none
                &none      &none      &none     &none     &none     &none      &none                    &none      &none      &none        &kp C_MUTE   &kp C_PP   &kp C_STOP &kp C_BRI_UP
            >;
        };    };
};
// BT 0 Iphone,BT 2 lagi di pc
